<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<!-- Simple data types -->
	<!-- InvoiceId is restricted to 35 characters -->
	<xs:simpleType name="InvoiceIdType">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="35"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 6 digit numbers -->
	<xs:simpleType name="integer6">
		<xs:restriction base="xs:positiveInteger">
			<xs:totalDigits value="6" fixed="false"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 6 digit numbers or nil
	<xs:simpleType name="integer6nil">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base='xs:string'>
					<xs:length value="0"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="xs:positiveInteger">
				<xs:totalDigits value="6" fixed="false"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	 -->
	<!-- 8 digit numbers -->
	<xs:simpleType name="integer8">
		<xs:restriction base="xs:positiveInteger">
			<xs:totalDigits value="8" fixed="false"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 10 digit numbers -->
	<xs:simpleType name="integer10">
		<xs:restriction base="xs:positiveInteger">
			<xs:totalDigits value="10" fixed="false"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 12 digit numbers -->
	<xs:simpleType name="integer12">
		<xs:restriction base="xs:positiveInteger">
			<xs:totalDigits value="12" fixed="false"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 15 digit numbers with 2 fractions for quantities -->
	<xs:simpleType name="decimaldot2">
		<xs:restriction base="xs:decimal">
			<xs:totalDigits value="15" fixed="false"/>
			<xs:fractionDigits value="2"/>
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 20 digit numbers -->
	<xs:simpleType name="integer20">
		<xs:restriction base="xs:positiveInteger">
			<xs:totalDigits value="20" fixed="false"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 6 digit strings -->
	<xs:simpleType name="string6">
		<xs:restriction base="xs:string">
			<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 9 digit strings -->
	<xs:simpleType name="string9">
		<xs:restriction base="xs:string">
			<xs:maxLength value="9"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 10 digit strings -->
	<xs:simpleType name="string10">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 13 digit strings -->
	<xs:simpleType name="string13">
		<xs:restriction base="xs:string">
			<xs:maxLength value="13"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 14 digit strings -->
	<xs:simpleType name="string14">
		<xs:restriction base="xs:string">
			<xs:maxLength value="14"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 18 digit strings -->
	<xs:simpleType name="string18">
		<xs:restriction base="xs:string">
			<xs:maxLength value="18"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 20 digit strings -->
	<xs:simpleType name="string20">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 25 digit strings -->
	<xs:simpleType name="string25">
		<xs:restriction base="xs:string">
			<xs:maxLength value="25"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 30 digit strings -->
	<xs:simpleType name="string30">
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 35 digit strings -->
	<xs:simpleType name="string35">
		<xs:restriction base="xs:string">
			<xs:maxLength value="35"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 40 digit strings -->
	<xs:simpleType name="string40">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 70 digit strings -->
	<xs:simpleType name="string70">
		<xs:restriction base="xs:string">
			<xs:maxLength value="70"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 210 digit strings -->
	<xs:simpleType name="string210">
		<xs:restriction base="xs:string">
			<xs:maxLength value="210"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 256 digit strings -->
	<xs:simpleType name="string256">
		<xs:restriction base="xs:string">
			<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 512 digit strings -->
	<xs:simpleType name="string512">
		<xs:restriction base="xs:string">
			<xs:maxLength value="512"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- positive decimal with five digit fraction -->
	<xs:simpleType name="decimaldot3">
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
			<xs:fractionDigits value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- positive decimal with five digit fraction -->
	<xs:simpleType name="decimaldot5">
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
			<xs:fractionDigits value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Type for Date format -->
	<xs:simpleType name="DateFormatType">
		<xs:restriction base="xs:token">
			<!--<xs:pattern value="(((([13579][26]|[2468][048])00)|([0-9]{2}(([13579][26])|([2468][048]|0[48]))))(((09|04|06|11)(0[1-9]|1[0-9]|2[0-9]|30))|((01|03|05|07|08|10|12)(0[1-9]|1[0-9]|2[0-9]|3[01]))|(02(0[1-9]|1[0-9]|2[0-9]))))|([0-9]{4}(((09|04|06|11)(0[1-9]|1[0-9]|2[0-9]|30))|((01|03|05|07|08|10|12)(0[1-9]|1[0-9]|2[0-9]|3[01]))|(02([01][0-9]|2[0-8]))))"/>-->
			<xs:pattern value="[2-9][0-9][0-9][0-9][0-1][0-9][0-3][0-9]|[2-9][0-9][0-9][0-9][0-1][0-9][0-3][0-9][0-2][0-9][0-5][0-9]"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
